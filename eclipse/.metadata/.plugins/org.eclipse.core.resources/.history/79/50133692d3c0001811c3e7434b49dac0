package com.spaceboyross.gundam.world.structures.mapgen;

import java.util.Map;
import java.util.Map.Entry;
import java.util.Random;

import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.MathHelper;
import net.minecraft.world.World;
import net.minecraft.world.gen.structure.MapGenStructure;
import net.minecraft.world.gen.structure.StructureStart;

public class ColonyMaintenanceTunnelMapGenStructure extends MapGenStructure {

	public ColonyMaintenanceTunnelMapGenStructure() {
	}
	
	public ColonyMaintenanceTunnelMapGenStructure(Map<String,String> map) {
		this();
		for(Entry<String,String> entry : map.entrySet()) {
		}
	}
	
	@Override
	public String getStructureName() {
		return "Colony Maintenance Tunnel";
	}

	@Override
	public BlockPos getNearestStructurePos(World worldIn,BlockPos pos,boolean findUnexplored) {
		return null;
	}

	@Override
	protected boolean canSpawnStructureAtCoords(int chunkX,int chunkZ) {
		return false;
	}

	@Override
	protected StructureStart getStructureStart(int chunkX,int chunkZ) {
		ColonyMaintenanceTunnelCorridorMapGenStructure.Start start = new ColonyMaintenanceTunnelCorridorMapGenStructure.Start(this.world,this.rand,chunkX,chunkZ,4);
		return start;
	}
	
	public static class Start extends StructureStart {
		
		public Start() {}
		
		public Start(World worldIn,Random rand,int x,int z,int size) {
			super(x,z);
		}
		
		@Override
        public void writeToNBT(NBTTagCompound tagCompound) {
			super.writeToNBT(tagCompound);
		}
		
		@Override
        public void readFromNBT(NBTTagCompound tagCompound) {
			super.readFromNBT(tagCompound);
		}
	}
}