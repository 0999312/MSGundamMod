package com.spaceboyross.gundam.world.gen;

import java.util.List;
import java.util.Random;

import com.spaceboyross.gundam.world.terrain.NormalTerrainGenerator;

import net.minecraft.entity.EnumCreatureType;
import net.minecraft.util.math.BlockPos;
import net.minecraft.world.World;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.Biome.SpawnListEntry;
import net.minecraft.world.chunk.Chunk;
import net.minecraft.world.chunk.ChunkPrimer;
import net.minecraft.world.gen.IChunkGenerator;

public class ColonyChunkGenerator implements IChunkGenerator {
	
	private World world;
	private Random random;
	private NormalTerrainGenerator terraingen;
	private Biome[] biomesForGeneration;
	
	public ColonyChunkGenerator(World world) {
		this.world = world;
	}

	@Override
	public Chunk generateChunk(int x,int z) {
		ChunkPrimer chunkprimer = new ChunkPrimer();
		
		Chunk chunk = new Chunk(this.world,chunkprimer,x,z);
		return chunk;
	}

	@Override
	public void populate(int x,int z) {
	}

	@Override
	public boolean generateStructures(Chunk chunkIn,int x,int z) {
		return false;
	}

	@Override
	public List<SpawnListEntry> getPossibleCreatures(EnumCreatureType creatureType,BlockPos pos) {
		return null;
	}

	@Override
	public BlockPos getNearestStructurePos(World worldIn,String structureName,BlockPos position,boolean findUnexplored) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void recreateStructures(Chunk chunkIn,int x,int z) {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean isInsideStructure(World worldIn,String structureName,BlockPos pos) {
		// TODO Auto-generated method stub
		return false;
	}

}
