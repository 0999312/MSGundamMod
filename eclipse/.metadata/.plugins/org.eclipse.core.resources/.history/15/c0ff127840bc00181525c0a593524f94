package com.spaceboyross.gundam.models;

import java.util.List;

import org.lwjgl.util.vector.Vector2f;
import org.lwjgl.util.vector.Vector3f;

import com.google.common.collect.Lists;

import net.minecraft.client.renderer.BufferBuilder;

/* A port of https://github.com/V0idWa1k3r/Factory0-Resources/blob/master/src/main/java/v0id/api/f0resources/client/model/WavefrontObject.java to this mod */
public class WavefrontObject {
	
	private final List<Vertex> vertices = Lists.newArrayList();
	
	public WavefrontObject() {}
	
	public void bakeGeometry(List<Vector3f> faces,List<Vector3f> vertexData,List<Vector2f> uvData,List<Vector3f> normalData) {
		for(Vector3f faceData : faces) {
			int vertexIndex = (int)(faceData.getX()-1);
			int uvIndex = (int)(faceData.getY()-1);
			int normalIndex = (int)(faceData.getZ()-1);
			this.vertices.add(new Vertex(vertexData.get(vertexIndex),uvData.get(uvIndex),normalData.get(normalIndex)));
		}
	}
	
	public void putVertices(BufferBuilder buffer) {
		for(Vertex v : this.vertices) v.putVertex(buffer);
	}
	
	public class Vertex {
		public final Vector3f position;
		public final Vector2f uvset;
		public final Vector3f normals;
		
		public Vertex(Vector3f v,Vector2f v1,Vector3f v2) {
			this.position = v;
			this.uvset = v1;
			this.normals = v2;
		}
		
		public void putVertex(BufferBuilder buffer) {
			buffer.pos(this.position.x,this.position.y,this.position.z).tex(this.uvset.x,1-this.uvset.y).normal(this.normals.x,this.normals.y,this.normals.z).endVertex();
		}
	}
}